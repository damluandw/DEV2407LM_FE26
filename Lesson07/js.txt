Ngôn ngữ lập trình kịch bản JavaScript
1. Systax 
    - Nhúng/sử dụng JS trong HTML
2. Các biến, mảng, object,.. trong JS
    - Biến:
        + Sử dụng var/let/const để khai báo biến
            ++ var : khai báo biến toàn cục
            ++ let : khai báo biến cục bộ
            ++ const : khai báo hằng số
        ex: var tên_biến;
        
    - Mảng
        + Khai báo
            var tên_biến =[]; // khai báo trống
            var tên_biến =[1,3,4,5,'abc'];
            var tên_biến = new Array() // khai báo trống
            var tên_biến = new Array(1,3,4,5,,'abc')
        + Gán giá trị:
            tên_biến[ví trị] = giá trị(value) //vị trí bắt đầu từ 0
        + Lấy giá giá trị
            tên_biến[ví trị]
3. Vòng lặp trong JS
    - vòng lặp for 
        + for đầy đủ
            ex: for(let i=0; i<n; i++)
            {
                logic xử lý
            }
        + for khuyết một phần
            ex: for(let i=0; i<n;){
                logic xử lý
                i++;
            }
        + for khuyết toàn bộ
            ex: for(;;){
                logic xử lý
                // sử dụng đến các câu lệnh rẽ nhánh và sử dụng bước nhảy để tránh 
                // vòng lặp vô hạn
            }
        + for không thân
            ex: for(let i; conslog(i), i++)
    - vòng lặp while
        Systax: 
            while(mệnh đề điều kiện){
                logic xử lý
            }
        note:  kiểm tra điều kiện trước khi xử lý logic bên trong
    - vòng lặp do ... while
        Systax: 
            do 
            {
                logic xử lý
            } while(mệnh đề điều kiện)
        note: xử lý logic bên trong trong rồi mới kiểm tra điều kiện
    - forEach(){}
        + được sử dụng với list object
4. Cấu trúc rẽ nhánh
    - if {} else {}
        + if đơn (nếu điều kiện = true thì khối lệnh được thực thi)
            if(điều kiện){
                khối lệnh 
            }
        + if đầy đủ     (nếu điều kiện = true thì khối lệnh 1 sẽ 
                        được thực thi ngược lại thì khối lệnh 2 sẽ được thực thi)
            if(điều kiện){
                khối lệnh  1
            }else {
                khối lệnh  2
            }

        + if bậc thang 
            (nếu điều kiện 1 = true thì khối lệnh 1 được thực thi và bỏ qua các khối if else đằng sau
             nếu  điều kiện 1 sai thì kiểm tra điều kiện 2;
             nếu điều kiện 2 = true thì khối lệnh 2  và bỏ qua các khối if else  đăng sau
             nếu điều kiện 2 sai thì kiểm tra điều kiện thứ 3 ....)
            if(điều kiện 1){
                khối lệnh 1
            }else if(điều kiện 2){
                khối lệnh 2
            }else if(điều kiện 3){
                khối lệnh 3
            }...
            else{
                khối lệnh n
            }
        + if lồng nhau
            if(điều kiện1){
                khối lệnh 1.1 (có thể có hoặc không)

                if(điều kiện 2){
                    khối lệnh 2
                }

                khối lệnh 1.2 (có thể có hoặc không)
            }
    - switch case
            switch(biến)
                case giá_trị1: 
                    khối lệnh 1
                    break;
                case giá_trị2:
                    khối lệnh 2
                    break;
                ....
                default:
                    khối lệnh n
                    break;
    - bước nhảy:
        + break;
        + continue;
        + return;
5. Toán tử, toán hạng

6. DOM, Jquery

7. Tương tác với HTML

8. function

9. OOP



